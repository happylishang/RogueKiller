buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        mavenCentral()
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.27.1'

    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


android {
    compileSdkVersion 23
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId "com.snail.roguekiller"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 2
        versionName "1.5"
        ndk {
            moduleName "JNISample"
        }

    }
    signingConfigs {
        releaseConfig {
            storeFile file('../keystore.jks')
            Properties properties = loadProperties('../release.properties')
            storePassword properties.get('storepassword')
            keyAlias properties.get('keyalias')
            keyPassword properties.get('keypassword')
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.releaseConfig
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
//            signingConfig signingConfigs.releaseConfig
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets.main {
        // 你的.so库的实际路径
        jniLibs.srcDir 'src/libs'
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: '*.jar')

    implementation 'de.greenrobot:eventbus:2.4.1'
    implementation 'com.android.support:appcompat-v7:23.1.1'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.android.support:design:23.1.1'
    implementation 'jp.wasabeef:recyclerview-animators:2.2.3'
    implementation 'com.jakewharton:butterknife:8.0.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.0.1'
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.9@aar') {
        transitive = true;
    }
    implementation 'com.android.support:support-v4:23.1.1'
    implementation 'com.android.support:appcompat-v7:23.1.1'
    implementation 'com.android.support:recyclerview-v7:23.1.1'
    implementation 'com.jaredrummler:android-processes:1.0.8'
    implementation('com.crashlytics.sdk.android:answers:1.3.8@aar') {
        transitive = true;
    }
    implementation('com.crashlytics.sdk.android:crashlytics-ndk:2.0.5@aar') {
        transitive = true;
    }
}

Properties loadProperties(String name) {
    Properties properties = new Properties()

    InputStream is = null;
    try {
        is = new FileInputStream(name)
        properties.load(is)
    } catch (Throwable tr) {
    } finally {
        if (is != null) {
            try {
                is.close()
            } catch (Throwable tr) {
            }
        }
    }

    return properties
}

crashlytics {
    enableNdk true
    androidNdkOut 'src/obj'
    androidNdkLibsOut 'src/libs'
}

tasks.whenTaskAdded { task ->
    if (task.name.startsWith('assemble')) {
        task.finalizedBy "crashlyticsUploadSymbols" + task.name.substring('assemble'.length())
    }
}
